/**
 * This class is generated by jOOQ
 */
package jooq.steve.db.tables.records;


import javax.annotation.Generated;

import jooq.steve.db.tables.Connector;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorRecord extends UpdatableRecordImpl<ConnectorRecord> implements Record3<Integer, String, Integer> {

	private static final long serialVersionUID = -1145753976;

	/**
	 * Setter for <code>stevedb.connector.connector_pk</code>.
	 */
	public void setConnectorPk(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>stevedb.connector.connector_pk</code>.
	 */
	public Integer getConnectorPk() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>stevedb.connector.chargeBoxId</code>.
	 */
	public void setChargeboxid(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>stevedb.connector.chargeBoxId</code>.
	 */
	public String getChargeboxid() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>stevedb.connector.connectorId</code>.
	 */
	public void setConnectorid(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>stevedb.connector.connectorId</code>.
	 */
	public Integer getConnectorid() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Connector.CONNECTOR.CONNECTOR_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Connector.CONNECTOR.CHARGEBOXID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Connector.CONNECTOR.CONNECTORID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getConnectorPk();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getChargeboxid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getConnectorid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRecord value1(Integer value) {
		setConnectorPk(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRecord value2(String value) {
		setChargeboxid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRecord value3(Integer value) {
		setConnectorid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRecord values(Integer value1, String value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ConnectorRecord
	 */
	public ConnectorRecord() {
		super(Connector.CONNECTOR);
	}

	/**
	 * Create a detached, initialised ConnectorRecord
	 */
	public ConnectorRecord(Integer connectorPk, String chargeboxid, Integer connectorid) {
		super(Connector.CONNECTOR);

		setValue(0, connectorPk);
		setValue(1, chargeboxid);
		setValue(2, connectorid);
	}
}
