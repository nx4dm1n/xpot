/**
 * This class is generated by jOOQ
 */
package jooq.steve.db.tables;


import de.rwth.idsg.steve.utils.DateTimeConverter;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.steve.db.Keys;
import jooq.steve.db.Stevedb;
import jooq.steve.db.tables.records.ConnectorStatusRecord;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorStatus extends TableImpl<ConnectorStatusRecord> {

	private static final long serialVersionUID = -1041215781;

	/**
	 * The reference instance of <code>stevedb.connector_status</code>
	 */
	public static final ConnectorStatus CONNECTOR_STATUS = new ConnectorStatus();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConnectorStatusRecord> getRecordType() {
		return ConnectorStatusRecord.class;
	}

	/**
	 * The column <code>stevedb.connector_status.connector_pk</code>.
	 */
	public final TableField<ConnectorStatusRecord, Integer> CONNECTOR_PK = createField("connector_pk", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>stevedb.connector_status.statusTimestamp</code>.
	 */
	public final TableField<ConnectorStatusRecord, DateTime> STATUSTIMESTAMP = createField("statusTimestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateTimeConverter());

	/**
	 * The column <code>stevedb.connector_status.status</code>.
	 */
	public final TableField<ConnectorStatusRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(25), this, "");

	/**
	 * The column <code>stevedb.connector_status.errorCode</code>.
	 */
	public final TableField<ConnectorStatusRecord, String> ERRORCODE = createField("errorCode", org.jooq.impl.SQLDataType.VARCHAR.length(25), this, "");

	/**
	 * The column <code>stevedb.connector_status.errorInfo</code>.
	 */
	public final TableField<ConnectorStatusRecord, String> ERRORINFO = createField("errorInfo", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>stevedb.connector_status.vendorId</code>.
	 */
	public final TableField<ConnectorStatusRecord, String> VENDORID = createField("vendorId", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>stevedb.connector_status.vendorErrorCode</code>.
	 */
	public final TableField<ConnectorStatusRecord, String> VENDORERRORCODE = createField("vendorErrorCode", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>stevedb.connector_status</code> table reference
	 */
	public ConnectorStatus() {
		this("connector_status", null);
	}

	/**
	 * Create an aliased <code>stevedb.connector_status</code> table reference
	 */
	public ConnectorStatus(String alias) {
		this(alias, CONNECTOR_STATUS);
	}

	private ConnectorStatus(String alias, Table<ConnectorStatusRecord> aliased) {
		this(alias, aliased, null);
	}

	private ConnectorStatus(String alias, Table<ConnectorStatusRecord> aliased, Field<?>[] parameters) {
		super(alias, Stevedb.STEVEDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ConnectorStatusRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ConnectorStatusRecord, ?>>asList(Keys.FK_CS_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorStatus as(String alias) {
		return new ConnectorStatus(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConnectorStatus rename(String name) {
		return new ConnectorStatus(name, null);
	}
}
