/**
 * This class is generated by jOOQ
 */
package jooq.steve.db.tables;


import de.rwth.idsg.steve.utils.DateTimeConverter;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.steve.db.Keys;
import jooq.steve.db.Stevedb;
import jooq.steve.db.tables.records.ConnectorMetervalueRecord;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorMetervalue extends TableImpl<ConnectorMetervalueRecord> {

	private static final long serialVersionUID = -2004841177;

	/**
	 * The reference instance of <code>stevedb.connector_metervalue</code>
	 */
	public static final ConnectorMetervalue CONNECTOR_METERVALUE = new ConnectorMetervalue();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConnectorMetervalueRecord> getRecordType() {
		return ConnectorMetervalueRecord.class;
	}

	/**
	 * The column <code>stevedb.connector_metervalue.connector_pk</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, Integer> CONNECTOR_PK = createField("connector_pk", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.transaction_pk</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, Integer> TRANSACTION_PK = createField("transaction_pk", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.valueTimestamp</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, DateTime> VALUETIMESTAMP = createField("valueTimestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateTimeConverter());

	/**
	 * The column <code>stevedb.connector_metervalue.value</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.readingContext</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> READINGCONTEXT = createField("readingContext", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.format</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.measurand</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> MEASURAND = createField("measurand", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.location</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * The column <code>stevedb.connector_metervalue.unit</code>.
	 */
	public final TableField<ConnectorMetervalueRecord, String> UNIT = createField("unit", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * Create a <code>stevedb.connector_metervalue</code> table reference
	 */
	public ConnectorMetervalue() {
		this("connector_metervalue", null);
	}

	/**
	 * Create an aliased <code>stevedb.connector_metervalue</code> table reference
	 */
	public ConnectorMetervalue(String alias) {
		this(alias, CONNECTOR_METERVALUE);
	}

	private ConnectorMetervalue(String alias, Table<ConnectorMetervalueRecord> aliased) {
		this(alias, aliased, null);
	}

	private ConnectorMetervalue(String alias, Table<ConnectorMetervalueRecord> aliased, Field<?>[] parameters) {
		super(alias, Stevedb.STEVEDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ConnectorMetervalueRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ConnectorMetervalueRecord, ?>>asList(Keys.FK_PK_CM, Keys.FK_TID_CM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorMetervalue as(String alias) {
		return new ConnectorMetervalue(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConnectorMetervalue rename(String name) {
		return new ConnectorMetervalue(name, null);
	}
}
